var r=require("../../@babel/runtime/helpers/createClass"),e=require("../../@babel/runtime/helpers/classCallCheck"),c=require("../../utils/utils"),l=(require("./calculator"),r((function r(){e(this,r),this.name="逻辑计算",this.calc="$or",this.rules=[]}))),t=function(){return r((function r(l){if(e(this,r),this._calculator=null,c.isNone(l))throw new Error("calculator不能为空。");this._calculator=l}),[{key:"calcOr",value:function(r,e){if(c.isEmptyArray(e.rules)||e.rules.length<2)throw new Error("".concat(e.name," $or计算规则中的rules属性必须配置2条以上的计算子规则"));var l=this;return e.rules.some((function(e){return l._calculator.calcRule(r,e)}))}},{key:"calcAnd",value:function(r,e){if(c.isEmptyArray(e.rules)||e.rules.length<2)throw new Error("".concat(e.name," $and计算规则中的rules属性必须配置2条以上的计算子规则"));var l=this;return e.rules.every((function(e){return l._calculator.calcRule(r,e)}))}},{key:"calcNot",value:function(r,e){return!this._calculator.calcRule(r,e.rules)}},{key:"judging",value:function(r,e){if(!e)throw new Error("规则rule为空，无法计算");try{switch(e.calc){case"$or":return this.calcOr(r,e);case"$and":return this.calcAnd(r,e);case"$not":return this.calcNot(r,e)}}catch(r){console.warn("calc-logic",r)}throw new Error("".concat(e.calc,"逻辑运算无法识别，请检查规则。"))}}])}();module.exports={CalcRuleLogic:l,CalcLogic:t};